{"version":3,"sources":["images/profpic.png","images/github.svg","images/github_dark.svg","images/linkedin.svg","images/pic_1.png","images/pic_2.png","images/tutorfly_1.png","images/tutorfly_2.png","images/tutorfly_3.png","resume.js","style-constants.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","experiences","company","title","timeframe","bullets","projects","link","githubLink","blurb","images","src","tutorfly_1","caption","tutorfly_2","tutorfly_3","pic_1","pic_2","skills","interests","themeColors","App","react_default","a","createElement","className","profpic","alt","href","github","linkedin","map","color","i","style","backgroundColor","marginRight","length","onClick","colorHex","document","documentElement","setProperty","item","el","toUpperCase","github_dark","img","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f251cf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profpic.5ce750b8.png\";","module.exports = __webpack_public_path__ + \"static/media/github.1418f61f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_dark.55cf5128.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.d3b59b6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pic_1.cc22cbb1.png\";","module.exports = __webpack_public_path__ + \"static/media/pic_2.4124a2a8.png\";","module.exports = __webpack_public_path__ + \"static/media/tutorfly_1.24ee054d.png\";","module.exports = __webpack_public_path__ + \"static/media/tutorfly_2.e43142f3.png\";","module.exports = __webpack_public_path__ + \"static/media/tutorfly_3.c9918717.png\";","import pic_1 from './images/pic_1.png'\nimport pic_2 from './images/pic_2.png'\nimport tutorfly_1 from './images/tutorfly_1.png'\nimport tutorfly_2 from './images/tutorfly_2.png'\nimport tutorfly_3 from './images/tutorfly_3.png'\n\nexport const experiences = [\n  {\n    company: 'Tutorfly, Inc.',\n    title: 'Software Development Intern',\n    timeframe: 'September 2018 – Present',\n    bullets: [\n      'Worked as a front-end software developer, reporting directly to the CTO, on various web and native projects',\n      \"Implemented a web analytics system through Google Analytics to track click and pageview events throughout the site in order to optimize the site's UI\",\n      'Developed a large part of the mobile application via React Native, including designing mockups for the screens and developing in an agile environment',\n    ]\n  },\n  {\n    company: 'Creative Artists Agency',\n    title: 'Business Technology Solutions Intern (Music Touring)',\n    timeframe: 'June 2018 – August 2018',\n    bullets: [\n      'Developed the preliminary data acquisition strategy for music data sources meant to inform agents’ decisions about tour routing for their clients',\n      'Consulted for the agency by defining data source categories, identifying key assessment criteria, and providing recommendations of APIs and other data services to ingest',\n    ]\n  },\n  {\n    company: 'FOX Networks Group',\n    title: 'Full-Stack Software Engineering Intern',\n    timeframe: 'June 2017 – September 2017',\n    bullets: [\n      'Worked as a full-stack software engineering intern for the API team in the Fox Digital Consumer Group',\n      'Implemented from scratch a suite of internal tools to improve workflow for the other developers, including a project management tool meant to track developer progress on tasks and keep team members informed',\n      'Utilized the MERN stack to manage all aspects of the applications, including front-end design and development, back-end architecture, and data storage',\n    ]\n  },\n]\n\nexport const projects = [\n  {\n    title: 'Tutorfly Mobile App',\n    link: 'https://itunes.apple.com/us/app/tutorfly/id1458933486?mt=8&app=itunes&ign-mpt=uo%3D4',\n    githubLink: '',\n    blurb: 'I served as one of the principle developers in building out the Tutorfly mobile app from scratch using React Native and Expo. I worked in an agile time with 2 other developers in implementing authorization, state management, ui-development, interfacing with graphql, and more. The app was released to the iOS App Store on April 14, 2019.',\n    images: [\n      {\n        src: tutorfly_1,\n        caption: '0011. Tutorfly mobile app launch screen',\n      },\n      {\n        src: tutorfly_2,\n        caption: \"0012. The 'find a tutor' page\",\n      },\n      {\n        src: tutorfly_3,\n        caption: '0013. The profile page',\n      }\n    ],\n  },\n  {\n    title: 'Spotify Playlist Analyzer (coming soon)',\n    link: '',\n    githubLink: 'https://github.com/jacobfisher18/playlist_analyzer',\n    blurb: 'This personal project is a web app that integrates with the Spotify API to show you descriptive stats about your playlists. Use it to discover which of your playlists is the most “dancable,” or which tracks are the most popular.',\n    images: [\n      {\n        src: pic_1,\n        caption: '0021. landing page',\n      },\n      {\n        src: pic_2,\n        caption: '0022. home page',\n      },\n    ]\n  },\n  {\n    title: 'Tutorfly Web Analytics',\n    link: '',\n    githubLink: '',\n    blurb: 'My first project with Tutorfly was to implement web analytics for their web application. I set up Google Analytics with custom event tracking to track things like how often new users signed up, or the zip codes that get searched most often. The work involved familiarizing myself with the codebase to access relevant variables and injecting javascript throughout the web app.',\n    images: []\n  },\n  {\n    title: 'FOX DCGAPI Internal Tools',\n    link: '',\n    githubLink: '',\n    blurb: 'Interning at the Fox Digital Consumer Group, my project was to implement from scratch a suite of internal tools to help out the API team. The main internal tool was a full stack web application that interfaced with the github API to track the status of their JIRA tickets. I built a back-end in Node, Express, and MongoDB, and a front-end in React and Redux.',\n    images: []\n  },\n  {\n    title: 'CAA Music Touring Data Strategy',\n    link: '',\n    githubLink: '',\n    blurb: \"This one isn't quite a web dev job, but it was an interesting project I really enjoyed. At CAA my job was to research and recommend a data-acquisition strategy for the music touring department. I looked into API's provided by large and small companies, and compiled information on what data existed where. The deliverable from the end of my project will guide the agents in their pursuit to make more educated data-driven decisions about tour routing for their clients.\",\n    images: []\n  },\n]\n\nexport const skills = [\n  'HTML5',\n  'CSS3',\n  'JavaScript',\n  'React',\n  'Redux',\n  'React Native',\n  'GraphQL',\n  'Node.js',\n  'MongoDB',\n  'Express.js',\n  'C++',\n  'Agile Development',\n  'State Management',\n  'Asynchronous Computing',\n  'REST APIs',\n  'Front End Frameworks',\n  'Responsive Design',\n]\n\nexport const interests = [\n  'Los Angeles Sports Teams',\n  'Linguistics',\n  'UCLA Bruins',\n  'Spotify Playlists',\n  'Cool Movies',\n  'UCLA Spring Sing',\n  'User Interfaces',\n  'Road Trips',\n]","export const themeColors = [\n  '#E8453C',\n  '#FEBB3B',\n  '#3B81FE',\n  '#893BFE',\n  '#00B376',\n]","import React, { Component } from 'react';\nimport profpic from './images/profpic.png'\nimport github from './images/github.svg'\nimport github_dark from './images/github_dark.svg'\nimport linkedin from './images/linkedin.svg'\nimport { experiences, skills, projects, interests } from './resume.js'\nimport { themeColors } from './style-constants'\nimport './App.css';\n\nconst changeColorTo = (colorHex) => {\n  document.documentElement.style.setProperty('--main-color', colorHex);\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"info-container\">\n          <div className=\"pic-and-name-container\">\n          <img className=\"pic\" src={profpic} alt=\"Self\"></img>\n            <p className=\"name\">JACOB FISHER</p>\n          </div>\n          <p className=\"subtitle\">FRONT-END SOFTWARE DEVELOPER</p>\n          <p className=\"summary\">Currently interning at <a className=\"underlinedLink\" href=\"https://www.tutorfly.org/\">@Tutorfly</a> working on their mobile app.\n            Previously interned at <a className=\"underlinedLink\" href=\"https://www.fox.com/\">@Fox</a> working with the API team \n            and <a className=\"underlinedLink\" href=\"https://www.caa.com/\">@CAA</a> with Business Technology Solutions. Very \n            recent <a className=\"underlinedLink\" href=\"http://www.ucla.edu/\">@UCLA</a> graduate looking for an awesome full time gig.</p>\n          <div className=\"socialIcons\">\n            <a href=\"https://github.com/jacobfisher18\"><img className=\"socialIcon\" src={github} alt=\"github\"></img></a>\n            <a href=\"https://www.linkedin.com/in/jacobfisher18/\"><img className=\"socialIcon rightmost\" src={linkedin} alt=\"linkedin\"></img></a>\n          </div>\n          <div className=\"colors-container\">\n            {themeColors.map((color, i) => { \n                return (\n                  <div\n                    className=\"color\"\n                    style={{ backgroundColor: color , marginRight: i === themeColors.length-1 ? 0 : 20}}\n                    onClick={() => changeColorTo(color)}>\n                  </div>\n                )\n              })}\n          </div>\n        </div>\n        <div className=\"main-container\">\n          <div className=\"content-container\">\n          <p className=\"section-title\">\n            <span className=\"section-title-number\">001.</span> Education\n          </p>\n\n          <div className=\"resume-item\">\n            <p className=\"resume-item-title\">UNIVERSITY OF CALIFORNIA, LOS ANGELES</p>\n            <p className=\"resume-item-subtitle\">\n              <span className=\"font-bold\">B.S. Cognitive Science,</span> Specialization in Computing, Linguistics Minor<br />\n              <span className=\"font-small\">Honors: summa cum laude (GPA: 3.92)</span>\n            </p>\n          </div>\n\n          <p className=\"section-title\">\n            <span className=\"section-title-number\">002.</span> Experience\n          </p>\n\n          {experiences.map((item) => {\n              return (\n                <div className=\"resume-item\">\n                  <p className=\"resume-item-title\">\n                    <span className=\"font-bold\">{item.company}</span>, <span className=\"font-med\">{item.title}</span> | <span className=\"font-small\">{item.timeframe}</span>\n                  </p>\n                  <p className=\"resume-item-subtitle\">\n                    {item.bullets.map((el) => (<p>• {el}</p>))}\n                  </p>\n                </div>\n              )\n            })}\n\n          <p className=\"section-title\">\n            <span className=\"section-title-number\">003.</span> Skills\n          </p>\n\n          <div className=\"skills-container\">\n          {skills.map((item) => {\n              return (\n                <div className=\"chip-container\">\n                  <p className={`chip`}>{item}</p>\n                </div>\n              )\n            })}\n          </div>\n\n          <p className=\"section-title\">\n            <span className=\"section-title-number\">004.</span> Projects\n          </p>\n\n          {projects.map((item) => {\n              return (\n                <div className=\"resume-item\">\n                  <div className=\"resume-item-header\">\n                    <a href={item.link} className={item.link === '' && \"disabled\"}><p className=\"resume-item-title font-bold\">{item.title.toUpperCase()}</p></a>\n                    {\n                      item.githubLink &&\n                      <a href={item.githubLink}><img className=\"github-link\" src={github_dark} alt=\"github\"></img></a>\n                    }\n                  </div>\n                  <p className=\"resume-item-subtitle\">\n                    {item.blurb}\n                  </p>\n                  {\n                    item.images.map(img => {\n                      return (\n                        <div className=\"project-img-container\">\n                          <div className=\"project-img-div\">\n                            <img className=\"project-img\" src={img.src} alt={img.caption} />\n                          </div>\n                          <p className=\"project-img-caption\">{img.caption}</p>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              )\n            })}\n\n          <p className=\"section-title\">\n            <span className=\"section-title-number\">005.</span> Interests\n          </p>\n\n          {interests.map((item) => {\n              return (\n                <div className=\"chip-container\">\n                  <p className={`chip`}>{item}</p>\n                </div>\n              )\n            })}\n\n          </div>\n\n          <div className=\"footer\">\n            <a className=\"contact-container\" href=\"mailto: jacobfisher18@gmail.com\">\n              <p className=\"contact-text\">CONTACT ME</p>\n            </a>\n            <p className=\"copywright\">© 2019 JACOB FISHER. MADE IN LOS ANGELES.</p>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}